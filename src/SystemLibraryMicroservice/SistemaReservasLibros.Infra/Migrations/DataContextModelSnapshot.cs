// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaReservasLibros.Infra.Data;

#nullable disable

namespace SistemaReservasLibros.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaReservasLibros.Domain.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdLibro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Existencia");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.ToTable("Libros", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLibros.Domain.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdReserva");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaInicio");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Estado");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IdUsuario");

                    b.HasKey("Id");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLibros.Domain.Models.ReservationBook", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("IdReserva");

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("IdLibro");

                    b.HasKey("ReservationId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("ReservasLibros", (string)null);
                });

            modelBuilder.Entity("SistemaReservasLibros.Domain.Models.ReservationBook", b =>
                {
                    b.HasOne("SistemaReservasLibros.Domain.Models.Book", "Book")
                        .WithMany("ReservationBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaReservasLibros.Domain.Models.Reservation", "Reservation")
                        .WithMany("ReservationBooks")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("SistemaReservasLibros.Domain.Models.Book", b =>
                {
                    b.Navigation("ReservationBooks");
                });

            modelBuilder.Entity("SistemaReservasLibros.Domain.Models.Reservation", b =>
                {
                    b.Navigation("ReservationBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
